on:
  push: {}
  pull_request: {}

jobs:
  ubuntu:
    runs-on: ${{matrix.os}}
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: "Install Python"
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
      - 
        name: "Download BASS"
        run: |
          wget http://www.un4seen.com/files/bass24-linux.zip
          wget http://www.un4seen.com/files/z/3/tags18-linux.zip
          7z x bass24-linux.zip -obass24-linux -r
          7z x tags18-linux.zip -otags18-linux -r
      - 
        name: "Install python dependencies"
        run: python -m pip install -r requirements-dev.txt
      - 
        name: "Build wheel"
        run: |
          python setup.py build_ext --inplace
          python setup.py bdist_wheel
      - 
        name: "Run tests"
        run: |
          export LD_LIBRARY_PATH=$(pwd)/bass24-linux/x64/:$(pwd)/tags18-linux/x64/
          python -m pytest --junitxml=junit/test-results-${{matrix.python-version}}.xml
      - 
        name: "Upload wheel"
        uses: actions/upload-artifact@v3
        with:
          name: "Python ${{matrix.python-version}} (Ubuntu)"
          path: dist/*.whl
      - 
        name: "Upload test results"
        uses: actions/upload-artifact@v3
        with:
          name: "Tests for Python ${{matrix.python-version}} (Ubuntu)"
          path: "junit/test-results-${{matrix.python-version}}.xml"
        if: ${{always()}}
    strategy:
      matrix:
        include:
          - 
            os: ubuntu-20.04
            python-version: "3.6"
          - 
            os: ubuntu-20.04
            python-version: "3.7"
          - 
            os: ubuntu-20.04
            python-version: "3.8"
          - 
            os: ubuntu-20.04
            python-version: "3.9"
          - 
            os: ubuntu-20.04
            python-version: "3.10"

  windows-x64:
    runs-on: ${{matrix.os}}
    env:
      BASSLIB: "bass24\\x64"
      TAGSLIB: "tags18"
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: "Install Python"
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
          architecture: ${{matrix.arch}}
      - 
        name: "Download BASS"
        shell: powershell
        run: |
          $wc = New-Object System.Net.WebClient
          $wc.DownloadFile("http://www.un4seen.com/files/bass24.zip", (Join-Path ($pwd).path "bass24.zip"))
          $wc.DownloadFile("http://www.un4seen.com/files/z/3/tags18.zip", (Join-Path ($pwd).path "tags18.zip"))
          & 7z --% x bass24.zip -obass24 -r
          & 7z --% x tags18.zip -otags18 -r
      - 
        name: "Install python dependencies"
        run: python -m pip install -r requirements-dev.txt
      - 
        name: "Build wheel"
        run: |
          python setup.py build_ext --inplace
          python setup.py bdist_wheel
      - 
        name: "Run tests"
        run: |
          python -m pytest --junitxml=junit/test-results-${{matrix.python-version}}_${{matrix.arch}}.xml
      - 
        name: "Upload wheel"
        uses: actions/upload-artifact@v3
        with:
          name: "Python ${{matrix.python-version}}_${{matrix.arch}} (Windows)"
          path: dist/*.whl
      - 
        name: "Upload test results"
        uses: actions/upload-artifact@v3
        with:
          name: "Tests for Python ${{matrix.python-version}}_${{matrix.arch}} (Windows)"
          path: "junit/test-results-${{matrix.python-version}}_${{matrix.arch}}.xml"
        if: ${{always()}}
    strategy:
      matrix:
        include:
          - 
            os: windows-2022
            python-version: "3.6"
            arch: "x64"
          - 
            os: windows-2022
            python-version: "3.7"
            arch: "x64"
          - 
            os: windows-2022
            python-version: "3.8"
            arch: "x64"
          - 
            os: windows-2022
            python-version: "3.9"
            arch: "x64"
          - 
            os: windows-2022
            python-version: "3.10"
            arch: "x64"
  windows-x86:
    runs-on: ${{matrix.os}}
    env:
      BASSLIB: "bass24"
      TAGSLIB: "tags18"
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: "Install Python"
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
          architecture: ${{matrix.arch}}
      - 
        name: "Download BASS"
        shell: powershell
        run: |
          $wc = New-Object System.Net.WebClient
          $wc.DownloadFile("http://www.un4seen.com/files/bass24.zip", (Join-Path ($pwd).path "bass24.zip"))
          $wc.DownloadFile("http://www.un4seen.com/files/z/3/tags18.zip", (Join-Path ($pwd).path "tags18.zip"))
          & 7z --% x bass24.zip -obass24 -r
          & 7z --% x tags18.zip -otags18 -r
      - 
        name: "Install python dependencies"
        run: python -m pip install -r requirements-dev.txt
      - 
        name: "Build wheel"
        run: |
          python setup.py build_ext --inplace
          python setup.py bdist_wheel
      - 
        name: "Run tests"
        run: |
          python -m pytest --junitxml=junit/test-results-${{matrix.python-version}}_${{matrix.arch}}.xml
      - 
        name: "Upload wheel"
        uses: actions/upload-artifact@v3
        with:
          name: "Python ${{matrix.python-version}}_${{matrix.arch}} (Windows)"
          path: dist/*.whl
      - 
        name: "Upload test results"
        uses: actions/upload-artifact@v3
        with:
          name: "Tests for Python ${{matrix.python-version}}_${{matrix.arch}} (Windows)"
          path: "junit/test-results-${{matrix.python-version}}_${{matrix.arch}}.xml"
        if: ${{always()}}
    strategy:
      matrix:
        include:
          - 
            os: windows-2022
            python-version: "3.6"
            arch: "x86"
          - 
            os: windows-2022
            python-version: "3.7"
            arch: "x86"
          - 
            os: windows-2022
            python-version: "3.8"
            arch: "x86"
          - 
            os: windows-2022
            python-version: "3.9"
            arch: "x86"
          - 
            os: windows-2022
            python-version: "3.10"
            arch: "x86"

  build-docs:
    runs-on: windows-2022
    needs: windows-x64
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: "Install Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - 
        name: "Install python dependencies"
        run: python -m pip install -r requirements-dev.txt
      - 
        name: "Download artifact"
        uses: actions/download-artifact@v3
        with:
          name: "Python 3.10_x64 (Windows)"
      - 
        name: "Install Bass4Py wheel"
        shell: bash
        run: |
          pip install $(/usr/bin/find . -name Bass4Py*.whl)
      - 
        name: "Build docs"
        run: |
          make html
        working-directory: ${{github.workspace}}/doc
      - 
        name: "Upload docs"
        uses: actions/upload-artifact@v3
        with:
          name: "Docs"
          path: doc/_build/
